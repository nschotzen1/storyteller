/* General Styles for Card Container */
.card-container {
  display: flex;
  flex-direction: column;
  align-items: center; /* or stretch to fill width */
  justify-content: center;
  margin: 0 auto;
  padding: 20px; /* Adjust as needed */
  max-width: 100%; /* Ensure it can grow to full width */
}


.card-wrapper {
  display: flex;
  gap: 2%;
}

.card.selected {
  border: 3px solid gold;
}

.new-cards-display {
  gap: 20px; /* Ensure enough space between cards */
  padding: 20px 0; /* Vertical padding for breathing room */
}

.card {
  transition: transform 0.3s ease; /* Smooth transformation on interaction */
}

.card:hover {
  transform: translateY(-5px); /* Slight raise effect on hover */
  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.2); /* Deeper shadow for emphasis */
}

/* Styles for Prefix Container and Fragments */
.prefix-container {
  display: flex;
  flex-wrap: wrap;
  justify-content: center;
  margin-top: 20px;
  font-family: 'Arial', sans-serif;
  /* background: #f0f0f0; */
  padding: 20px 0;
}

.prefix {
  flex: 0 1 calc(33.333% - 20px);
  background-color: #f5f5dc; /* Parchment-like color */
  color: #333;
  margin: 5px;
  padding: 20px;
  box-shadow: 0 2px 5px rgba(0, 0, 0, 0.2);
  text-align: center;
  color: #333;
  cursor: pointer; /* Add cursor pointer for better UX */
  position: relative;
  background-image: url('../assets/paper_texture.png');
  background-size: cover;
  opacity: 80%;
  

  /* Shimmer Effect */
  /* background: linear-gradient(to right, #acacac 20%, #ffffff 40%, #acacac 60%); */
  /* background-size: 200% 100%; */
}

/* Mode Switch Buttons */
.mode-switch-buttons {
  display: flex;
  gap: 10px; /* Space between buttons */
  margin-bottom: 20px; /* Add spacing below the buttons */
  z-index: 5; /* Ensure buttons are above other elements */
  position: relative; /* Position relative to allow adjustment */
}

.mode-button {
  padding: 10px 20px; /* Add padding for a comfortable button size */
  background-color: #007bff; /* Button color */
  color: white; /* Text color */
  border: none; /* Remove default border */
  border-radius: 5px; /* Slight rounded corners */
  cursor: pointer; /* Pointer cursor on hover */
  box-shadow: 0 2px 5px rgba(0, 0, 0, 0.2); /* Add some shadow for depth */
  transition: background-color 0.3s ease; /* Smooth color transition on hover */
}

.mode-button:hover {
  background-color: #0056b3; /* Darker shade when hovered */
}



.embossed-text {
  color: #e5e5e5; /* Light text color for the embossed effect */
  text-shadow: 
    1px 1px 1px #777, /* Grey shadow to the bottom right */
    -1px -1px 1px #fff; /* White highlight to the top left */
  font-weight: bold; /* Bold text stands out more */
}



/* Apply shimmer effect on hover/selected */
.prefix:hover, .prefix.selected { 
  animation: shimmer 1.5s linear infinite;
}

@keyframes shimmer {
  0% { background-position: -150% 0; }
  100% { background-position: 150% 0; }
} 



/* Fade Effect */
/* .prefix {
  -webkit-mask-image: linear-gradient(180deg, #000 60%, transparent);
} */


/* Fading Text Effect */
.prefix {
  animation: fadeText 3s infinite;
}

@keyframes fadeText {
  0%, 100% { color: #333; }
  50% { color: transparent; }
}




.blur
{
	color:transparent;
	text-shadow: 0em 0em 0.08em #000;
}

.blurrier
{
	color:transparent;
	text-shadow: 0em 0em 0.2em #000;
}

.blurrier::selection {
	background-color:transparent;
	color:transparent;
}

.blurrier::-moz-selection {
	background-color:transparent;
	color:transparent;
}

.smear
{
	color:transparent;
	text-shadow: 0em 0em 0.02em rgba(0,0,0,0.75), -0.2em 0em 0.5em rgba(0,0,0,0.5), 0.2em 0em 0.5em rgba(0,0,0,0.5);
}


.prefix::after {
  content: '';
  position: absolute;
  top: 0;
  right: 0;
  width: 100%; /* Adjust width as needed */
  height: 100%;
  /* background-image: linear-gradient(to right, rgba(255,255,255,0) 20%, rgb(77, 110, 87) 80%, white 100%); */
  pointer-events: none;
  opacity: 1; /* Full visibility initially */
}

/* @keyframes fadeOutEffect {
  from { opacity: 1; }
  to { opacity: 0.3; }
} */

.book-background {
  /* Adjust the width and height as needed */
  width: 100%; /* Full width of the container */
  height: 80vh; /* This might need adjustment */
  position: relative;
}

.book-image {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background-size: contain;
  background-position: center;
  background-repeat: no-repeat;
  transition: opacity 1s ease-in-out;
  opacity: 1;
  display: flex;
  flex-direction: column;
  justify-content: space-between; /* Aligns children at both ends */
  align-items: flex-end; /* Position at the bottom of the image */
  padding: 20px; 
}

.book-image.fade-out {
  opacity: 0;
}

.bottom-content {
  position: absolute; /* Position relative to the parent with a relative position */
  bottom: 20px; /* Adjust the distance from the bottom as needed */
  left: 50%; /* Start at the half-way point of the parent */
  transform: translateX(-50%); /* Center the element by moving it left by half its width */
  width: 80%; /* Representing the width you want */
  padding: 20px; /* Padding inside the box */
  box-sizing: border-box; /* To include padding and border in the box's width */
  /* background: rgba(255, 255, 255, 0.7); Example background with some transparency */
  text-align: center; /* Center the text inside the box */
  border-radius: 10px; /* If you want rounded corners */
  box-shadow: 0 2px 5px rgba(0, 0, 0, 0.2); /* Optional: Adds a subtle shadow */
  z-index: 10; /* Ensure it's above other elements */
}

.left-prefix-container,
.right-prefix-container {
  display: flex;
  flex-direction: column;
  gap: 10px; /* Adjust the gap as needed */
}


.top-content, .bottom-content {
  padding: 20px; /* Adjust as needed */
}

.prefix.selected::after {
  animation: fadeOutEffect 30s forwards; /* Adjust duration as needed */
}


.text-area-container {
  position: absolute;
  bottom: 20px; /* Adjust as needed */
  left: 0;
  right: 0;
  display: flex;
  justify-content: center; /* Center the TextArea */
  z-index: 5; /* Higher than the book image for visibility */
}

.text-area {
  background: rgba(255, 255, 255, 0.9); /* Increase opacity for better readability */
  width: calc(100% - 40px); /* Subtract the padding from the width */
  max-width: 800px; /* Set a max-width to prevent it from becoming too wide */
  margin: 0; /* Remove margin since it's absolutely positioned */
  background: rgba(255, 255, 255, 0.8); /* Semi-transparent background for readability */border-radius: 5px; /* Soften edges */
  box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1); /* Subtle shadow for depth */
}

.story-fragment-container {
  position: absolute;
  top: 20px; /* Adjust as needed */
  width: 100%;
  display: flex;
  justify-content: space-around; /* Distribute fragments evenly */
}
.send-button {
  position: absolute;
  bottom: -50px; /* Adjust the distance from the bottom of the text-area-container */
  border-radius: 50%; /* Makes the button round */
  width: 50px; /* Size of the button */
  height: 50px; /* Size of the button */
  background: #007bff; /* Background color of the button */
  color: white; /* Text/icon color */
  border: none; /* Removes the border */
  display: flex; /* To center the icon/text inside the button */
  align-items: center; /* Centers horizontally */
  justify-content: center; /* Centers vertically */
  box-shadow: 0 2px 5px rgba(0, 0, 0, 0.2); /* Optional: adds a shadow for depth */
  cursor: pointer;
  z-index: 4; /* Make sure it's above the TextArea */
}

.send-button:disabled {
  background: #ccc; /* Background color when the button is disabled */
}

/* Optional: Add hover effect for the button */
.send-button:not(:disabled):hover {
  background: #0056b3; /* Darker shade when hovered */
}


.storytelling-points {
  display: block; /* Or inline-block, depending on layout */
  margin-top: 8px; /* Space from the fragment text */
  font-size: 0.8em; /* Smaller than the main text */
  font-weight: bold; /* Make it stand out */
  color: #007bff; /* A distinct color; adjust as needed */
  text-align: right; /* Align to the right side of the button */
  padding-right: 10px; /* Spacing from the right edge */
}

.storytelling-points-display {
  background: rgba(0, 0, 0, 0.05); /* Light background for contrast */
  padding: 10px; /* Padding for space around text */
  border-radius: 5px; /* Consistent rounded edges */
  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1); /* Light shadow for floating effect */
}

.new-cards-display {
  display: flex;
  justify-content: center;
  margin-top: 20px;
}

.card {
  margin: 0 10px;
}